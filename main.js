!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",modalSpan:".modal__span"};class t{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOutside=this._closePopupOutside.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close"),this._modalButton=this._popupElement.querySelector(".modal__button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closePopupOutside)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closePopupOutside)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closePopupOutside(e){e.target===this._popupElement&&this.close()}renderLoading(e){this._modalButton.textContent=e}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}}class s extends t{constructor(e,t){super(e),this._submitButton=this._popupElement.querySelector(".modal__button"),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}_handleSubmit=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close(),this._popupForm.reset()};setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}}class i{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class n{constructor(e,t,s,i,n){this._data=e,this.isLiked=e.isLiked,this.id=e._id,this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButton=i,this._handleLikeButton=n}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this))),this._deleteButton.addEventListener("click",(()=>this._handleDeleteButton(this))),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._link,this._name)}))}_handleLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleIsLiked(e){this.isLiked=e,this._handleLikes()}deleteCard(){this._cardElement.remove(),this._element=null}getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._setEventListeners(),this._handleLikes(),this._cardElement}}var o=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._modalSpan=e.modalSpan,this._form=t}_resetSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass)}hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t&&(t.textContent="",t.classList.remove(this._inputErrorClass))}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t&&(t.textContent=e.validationMessage,t.classList.add(this._errorClass))}toggleButtonState(){this._isFormValid()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_isFormValid(){return this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this.hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this.hideInputError(e)})),this.toggleButtonState()}};const r=document.getElementById("avatar-button"),l=document.getElementById("profile-edit-button"),a=document.getElementById("profile-add-button"),d=document.getElementById("profile-image-modal"),h=document.getElementById("profile-title-input"),c=document.getElementById("profile-description-input"),u=document.forms["profile-image-form"],_=document.forms["profile-form"],m=document.forms["add-card-form"],p=new class extends t{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__preview-image"),this._captionElement=this._popupElement.querySelector(".modal__image-text")}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._imageElement.alt=t,this._captionElement.textContent=t,super.open()}}("#image-modal");p.setEventListeners();const E=new class extends t{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._popupDeleteButton=this._popupElement.querySelector(".modal__button")}handleDelete(e){this._handleDeleteSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()}))}}("#delete-card-modal");E.setEventListeners();const g=new s("#profile-edit-modal",(e=>{var t;t=e,console.log(t),g.renderLoading("Saving..."),v.updateUserInfo(t).then((e=>{f.setUserInfo(e),q.resetValidation()})).catch((e=>{console.log(e)})).finally((()=>{g.close(),g.renderLoading("Save")}))}));g.setEventListeners();const v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._handleResponse(e)))}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:`${e.name}`,about:`${e.description}`})}).then((e=>this._handleResponse(e)))}updateProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._handleResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._handleResponse(e)))}createCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:`${e.title}`,link:`${e.url}`}),headers:this._headers}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._handleResponse(e)))}deleteLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"2db58c83-3523-4135-8564-2660432887a4","Content-Type":"application/json"}}),f=new class{constructor(e){let{titleSelector:t,descriptionSelector:s,profileImage:i}=e;this._titleElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._imageSelector=document.querySelector(i)}getUserInfo(){return{name:this._titleElement.textContent,about:this._descriptionElement.textContent}}setUserInfo(e){this._titleElement.textContent=e.name,this._descriptionElement.textContent=e.about}setProfileImage(e){this._imageSelector.src=e.avatar}}({titleSelector:".profile__title",descriptionSelector:".profile__description",profileImage:".profile__image"}),L=new s("#add-card-modal",(e=>{var t;t=e,L.renderLoading("Loading..."),v.createCard(t).then((e=>{k(e),L.close(),U.resetValidation()})).finally((()=>{L.renderLoading("Save")})),console.log(e)}));L.setEventListeners();const b=new s("#profile-image-modal",(e=>{var t;console.log(e),t=e.url,b.renderLoading("Loading..."),v.updateProfileImage(t).then((e=>{f.setProfileImage(e),b.close(),u.resetValidation(),B.disableSubmit()})).catch((e=>{console.log(`Unable to process request, ${e}`)})).finally((()=>{b.renderLoading("Save")}))}));let S;function k(e){const t=function(e){return new n(e,"#card-template",y,I,C).getCardElement()}(e);S.addItem(t)}function y(e,t){p.open({name:t,link:e})}function I(e){E.open(),console.log(e.id),E.handleDelete((()=>{E.renderLoading("Saving..."),v.deleteCard(e.id).then((()=>{e.deleteCard()})).catch((e=>{console.log(e)})).finally((()=>{E.close(),E.renderLoading("Yes")}))}))}function C(e){e.isLiked&&v.deleteLike(e.id).then((()=>{e.handleIsLiked(!1)})).catch((e=>{console.log(e)})),e.isLiked||v.likeCard(e.id).then((()=>{e.handleIsLiked(!0)})).catch((e=>{console.log(`Unable to process request, ${e}`)}))}b.setEventListeners(),l.addEventListener("click",(()=>{q.hideInputError(_);const{name:e,about:t}=f.getUserInfo();h.value=e,c.value=t,g.open(),q.resetValidation()})),d.addEventListener("click",(()=>{q.hideInputError(u);const{url:e}=f.getUserInfo()})),a.addEventListener("click",(()=>{L.open(),U.resetValidation()})),r.addEventListener("click",(()=>{b.open()})),v.getUserInfo().then((e=>{f.setProfileImage(e),f.setUserInfo({name:e.name,about:e.about})})).catch((e=>{console.log(`Unable to process request, ${e}`)})),v.getInitialCards().then((e=>{console.log(e),S=new i({items:e,renderer:e=>{k(e)}},".cards__list"),S.renderItems(e)})).catch((e=>{console.log(`Unable to process request, ${e}`)}));const B=new o(e,u),q=new o(e,_),U=new o(e,m);q.enableValidation(),U.enableValidation(),B.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,